// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DB_URL")
  directUrl = env("DIRECT_DB_URL")
}

// ENUMS
enum Status {
  PROCESSING
  FAILED
  SUCCESSED
}

// Tables

model User {
  uId       String   @unique
  email     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  wallets   Wallet[]
}

model Wallet {
  id           Int           @id @default(autoincrement())
  userId       String
  publicKey    String        @unique
  privateKey   String        @unique
  user         User          @relation(fields: [userId], references: [uId], onDelete: Cascade, onUpdate: Cascade)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  transactions Transaction[]
}

model Transaction {
  id         Int      @id @default(autoincrement())
  walletId   Int
  wallet     Wallet   @relation(fields: [walletId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  signature  String   @unique
  status     Status   @default(PROCESSING)
  fromPubKey String
  toPubKey   String
  tokenMint  String
  amount     BigInt
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}
